Package: wsrf
Type: Package
Title: Weighted Subspace Random Forest for Classification
Version: 1.7.9
Date: 2017-03-28
Authors@R: c(person(given = "Qinghan",
                    family = "Meng",
		    email = "qinghan.meng@gmail.com",
		    role="aut"),
             person(given = "He",
	            family = "Zhao",
		    email = "Simon.Yansen.Zhao@gmail.com",
		    role = c("aut", "cre")),
             person(given = c("Graham", "J."),
	            family = "Williams",
		    email = "graham.williams@togaware.com",
		    role = "aut"),
             person(given = "Junchao",
	            family = "Lv",
		    role = "aut"),
             person(given = "Baoxun",
	            family = "Xu",
		    role = "aut"),
	     person(given = c("Joshua", "Zhexue"),
	            family = "Huang",
		    email = "zx.huang@szu.edu.cn",
		    role = "aut"))
Description: A parallel implementation of Weighted Subspace Random
    Forest.  The Weighted Subspace Random Forest algorithm was
    proposed in the International Journal of Data Warehousing and
    Mining by Baoxun Xu, Joshua Zhexue Huang, Graham Williams, Qiang
    Wang, and Yunming Ye (2012) <DOI:10.4018/jdwm.2012040103>.  The
    algorithm can classify very high-dimensional data with random
    forests built using small subspaces.  A novel variable weighting
    method is used for variable subspace selection in place of the
    traditional random variable sampling.This new approach is
    particularly useful in building models from high-dimensional data.
License: GPL (>= 2)
URL: https://github.com/SimonYansenZhao/wsrf,http://togaware.com
BugReports: https://github.com/SimonYansenZhao/wsrf/issues
Depends: R (>= 3.3.0), Rcpp (>= 0.10.2), stats, parallel
LinkingTo: Rcpp
Suggests: rattle (>= 2.6.26), randomForest (>= 4.6.7),
          party (>= 1.0.7), stringr (>= 0.6.2), knitr (>= 1.5)
VignetteBuilder: knitr
NeedsCompilation: yes
Classification/ACM-2012: Computing methodologies ~ Classification and
    regression trees, Computing methodologies ~ Supervised learning by
    classification, Computing methodologies ~ Massively parallel and
    high-performance simulations, Computing methodologies ~
    Distributed simulation